{"ast":null,"code":"var _jsxFileName = \"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/DataDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataDisplay = ({\n  copyStatus,\n  urlData\n}) => {\n  _s();\n\n  const [isCopied, setCopied] = useState([copyStatus]);\n  const [isActive, setIsActive] = useState(false);\n  useEffect(() => {\n    const initialButtonsClickedText = urlData.map(() => copyStatus);\n    setCopied(initialButtonsClickedText);\n    const initialButtonsClickedStyle = urlData.map(() => false);\n    setIsActive(initialButtonsClickedStyle);\n  }, []);\n\n  const handleClick = index => {\n    setCopied(copyStatus => copyStatus.map((item, buttonIndex) => buttonIndex === index ? 'Copied!' : item));\n    copyStatuscopyStatus.map((item, buttonIndex) => buttonIndex === index ? 'Copied!' : item);\n    setIsActive(prev => prev.map((item, buttonIndex) => buttonIndex === index ? true : item));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultContainer\",\n      children: urlData.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"origUrlCol\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"origUrl\",\n            children: url.result.original_link\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newUrlCol\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"newUrl\",\n            children: url.result.full_short_link\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: url.result.full_short_link,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"copyBtn\",\n              className: copyStatus[index] === 'Copy' ? 'copyBtn' : 'copiedBtn',\n              onClick: () => handleClick(index),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: copyStatus[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 26\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(DataDisplay, \"hf2fHNImChkxs4idFMKwChO0BQA=\");\n\n_c = DataDisplay;\nexport default DataDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"sources":["/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/DataDisplay.js"],"names":["React","useState","useEffect","CopyToClipboard","DataDisplay","copyStatus","urlData","isCopied","setCopied","isActive","setIsActive","initialButtonsClickedText","map","initialButtonsClickedStyle","handleClick","index","item","buttonIndex","copyStatuscopyStatus","prev","url","result","original_link","full_short_link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,yBAAhC;;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA;;AAE7C,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBP,QAAQ,CAAC,CAACI,UAAD,CAAD,CAAtC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,yBAAyB,GAAGL,OAAO,CAACM,GAAR,CAAY,MAAMP,UAAlB,CAAlC;AACAG,IAAAA,SAAS,CAACG,yBAAD,CAAT;AACA,UAAME,0BAA0B,GAAGP,OAAO,CAACM,GAAR,CAAY,MAAM,KAAlB,CAAnC;AACAF,IAAAA,WAAW,CAACG,0BAAD,CAAX;AACH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AACzBP,IAAAA,SAAS,CAACH,UAAU,IAChBA,UAAU,CAACO,GAAX,CAAe,CAACI,IAAD,EAAOC,WAAP,KAAwBA,WAAW,KAAKF,KAAhB,GAAwB,SAAxB,GAAoCC,IAA3E,CADK,CAAT;AAGAE,IAAAA,oBAAoB,CAACN,GAArB,CAAyB,CAACI,IAAD,EAAOC,WAAP,KAAwBA,WAAW,KAAKF,KAAhB,GAAwB,SAAxB,GAAoCC,IAArF;AAEAN,IAAAA,WAAW,CAACS,IAAI,IACZA,IAAI,CAACP,GAAL,CAAS,CAACI,IAAD,EAAOC,WAAP,KAAwBA,WAAW,KAAKF,KAAhB,GAAwB,IAAxB,GAA+BC,IAAhE,CADO,CAAX;AAGH,GATD;;AAYA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKV,OAAO,CAACM,GAAR,CAAY,CAACQ,GAAD,EAAML,KAAN,kBACb;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAe,YAAA,SAAS,EAAC,SAAzB;AAAA,sBAAqCK,GAAG,CAACC,MAAJ,CAAWC;AAAhD,aAAQP,KAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAe,YAAA,SAAS,EAAC,QAAzB;AAAA,sBAAoCK,GAAG,CAACC,MAAJ,CAAWE;AAA/C,aAAQR,KAAR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEK,GAAG,CAACC,MAAJ,CAAWE,eAAlC;AAAA,mCACI;AAEI,cAAA,IAAI,EAAC,QAFT;AAGI,cAAA,SAAS,EAAC,SAHd;AAII,cAAA,SAAS,EAAElB,UAAU,CAACU,KAAD,CAAV,KAAsB,MAAtB,GAA+B,SAA/B,GAA2C,WAJ1D;AAKI,cAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,KAAD,CAL9B;AAAA,qCAMC;AAAA,0BACIV,UAAU,CAACU,KAAD;AADd;AAAA;AAAA;AAAA;AAAA;AAND,eACSA,KADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA4BH,CApDD;;GAAMX,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\nconst DataDisplay = ({ copyStatus, urlData }) => {\n\n    const [isCopied, setCopied] = useState([copyStatus]);\n    const [isActive, setIsActive] = useState(false);\n\n    useEffect(() => {\n        const initialButtonsClickedText = urlData.map(() => copyStatus);\n        setCopied(initialButtonsClickedText);\n        const initialButtonsClickedStyle = urlData.map(() => false);\n        setIsActive(initialButtonsClickedStyle);\n    }, []);\n\n    const handleClick = index => {\n        setCopied(copyStatus => \n            copyStatus.map((item, buttonIndex) => (buttonIndex === index ? 'Copied!' : item))\n        )\n        copyStatuscopyStatus.map((item, buttonIndex) => (buttonIndex === index ? 'Copied!' : item))\n\n        setIsActive(prev => \n            prev.map((item, buttonIndex) => (buttonIndex === index ? true : item))\n        )\n    }\n\n\n    return (\n        <>     \n        <div className='resultContainer'>\n            {urlData.map((url, index) =>\n            <div className=\"resultRow\">\n                <div className=\"origUrlCol\">\n                    <p key={index} className='origUrl'>{ url.result.original_link }</p>\n                </div>\n                <div className='newUrlCol'>\n                    <p key={index} className='newUrl'>{ url.result.full_short_link }</p>\n                    <CopyToClipboard text={url.result.full_short_link}>\n                        <button\n                            key={index}\n                            type=\"button\"\n                            className='copyBtn'\n                            className={copyStatus[index] === 'Copy' ? 'copyBtn' : 'copiedBtn'}\n                            onClick={() => handleClick(index)}\n                        ><span>\n                            {copyStatus[index]}\n                        </span>\n                        </button>\n                    </CopyToClipboard>\n                </div>\n            </div>\n            )}\n        </div>  \n        </>\n    )\n}\n\nexport default DataDisplay\n\n"]},"metadata":{},"sourceType":"module"}