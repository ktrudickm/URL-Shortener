{"ast":null,"code":"import _defineProperty from\"/Users/kendalltrudick/Documents/URL-Shortener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/kendalltrudick/Documents/URL-Shortener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/kendalltrudick/Documents/URL-Shortener/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./style.css';import axios from'axios';import{CopyToClipboard}from'react-copy-to-clipboard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Form=function Form(){var api='https://api.shrtco.de/v2/shorten?url=';var storedUrlData=JSON.parse(localStorage.getItem('urlData'))||[];var storedCopyData=JSON.parse(localStorage.getItem('isCopied'))||[];// ------------------------> State Declarations <----------------------------\n// Stores/handles the entered URL form user\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputUrl=_useState2[0],setInputUrl=_useState2[1];// Stores/handles the fetched URL data\nvar _useState3=useState(storedUrlData),_useState4=_slicedToArray(_useState3,2),urlData=_useState4[0],setUrlData=_useState4[1];// Error message for if the user did not input any URL\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),errMsg=_useState6[0],setErrMsg=_useState6[1];// Success message for valid URL\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),successMsg=_useState8[0],setSuccessMsg=_useState8[1];// For updating whether or not the user has clicked the copy button\nvar _useState9=useState(storedCopyData),_useState10=_slicedToArray(_useState9,2),isCopied=_useState10[0],setCopied=_useState10[1];// ------------------------> Copy Button Handling <----------------------------\nuseEffect(function(){var copyJson=JSON.stringify(isCopied);localStorage.setItem('isCopied',copyJson);},[isCopied]);// Setting the initial button text to 'Copy' after page refresh\nuseEffect(function(){var initialButtonsClickedText=isCopied.map(function(){return'Copy';});setCopied(initialButtonsClickedText);},[]);// handles the click event of the Copy button. Changes the text value of that specific item to 'Copied'\nvar handleClick=function handleClick(index){var newArr=isCopied.map(function(item,buttonIndex){return buttonIndex===index?'Copied!':item;});setCopied(newArr);console.log(isCopied);};// ------------------------> Form Field Handling <----------------------------\n// Handles capturing the url entered by the user in the input field and assiging it to inputURL\nfunction handleChange(e){e.preventDefault();setInputUrl(e.target.value);}// Saving data to local storage so data persists after browser refresh\nuseEffect(function(){var json=JSON.stringify(urlData);localStorage.setItem('urlData',json);},[urlData]);// Fetches the API data using the inputted URL\nvar handleURL=function handleURL(){return axios.get(api+\"\".concat(inputUrl)).then(function(res){setUrlData([].concat(_toConsumableArray(urlData),[res.data]));setInputUrl('');console.log(isCopied);setCopied([].concat(_toConsumableArray(isCopied),['Copy']));}).catch(function(err){console.error(\"Error fetching data\");console.log(err);});};// Handles the submition of the url and checks if it is valid, empty, or valid.\nfunction handleSubmit(e){e.preventDefault();if(inputUrl===''){setSuccessMsg(false);setErrMsg(true);setInputUrl('');}else{setInputUrl('');setErrMsg(false);setSuccessMsg(true);handleURL();}}// ------------------------> Return Page Content <----------------------------\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"sectionContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"formContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"formWrap\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"Form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"FormGroup form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:handleChange,value:inputUrl,className:\"Input\",size:\"80\",placeholder:\"Shorten a link here...\",style:errMsg?{border:'1.5px solid hsl(0, 87%, 67%)'}:{}}),errMsg&&/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"ErrorMsg\",children:/*#__PURE__*/_jsx(\"i\",{children:\"Please add a link\"})})}),successMsg&&/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"SuccessMsg\",children:/*#__PURE__*/_jsx(\"i\",{children:\"Success!\"})})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn\",children:\"Shorten It!\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"DisplayList\",children:/*#__PURE__*/_jsx(\"div\",{className:\"resultContainer\",children:urlData.map(function(url,index){var _jsx2;return/*#__PURE__*/_jsxs(\"div\",{className:\"resultRow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"origUrlCol\",children:/*#__PURE__*/_jsx(\"p\",{className:\"origUrl\",children:url.result.original_link},index)}),/*#__PURE__*/_jsxs(\"div\",{className:\"newUrlCol\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"newUrl\",children:url.result.full_short_link},index),/*#__PURE__*/_jsx(CopyToClipboard,{text:url.result.full_short_link,children:/*#__PURE__*/_jsx(\"button\",(_jsx2={type:\"button\",className:\"copyBtn\"},_defineProperty(_jsx2,\"className\",isCopied[index]==='Copy'?'copyBtn':'copiedBtn'),_defineProperty(_jsx2,\"onClick\",function onClick(){return handleClick(index);}),_defineProperty(_jsx2,\"children\",/*#__PURE__*/_jsx(\"span\",{children:isCopied[index]})),_jsx2),index)})]})]});})})})]})})});};export default Form;","map":{"version":3,"sources":["/Users/kendalltrudick/Documents/URL-Shortener/src/components/FormField/Form.js"],"names":["React","useState","useEffect","axios","CopyToClipboard","Form","api","storedUrlData","JSON","parse","localStorage","getItem","storedCopyData","inputUrl","setInputUrl","urlData","setUrlData","errMsg","setErrMsg","successMsg","setSuccessMsg","isCopied","setCopied","copyJson","stringify","setItem","initialButtonsClickedText","map","handleClick","index","newArr","item","buttonIndex","console","log","handleChange","e","preventDefault","target","value","json","handleURL","get","then","res","data","catch","err","error","handleSubmit","border","url","result","original_link","full_short_link"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst Form = () => {\n    const api = 'https://api.shrtco.de/v2/shorten?url=';\n    const storedUrlData = JSON.parse(localStorage.getItem('urlData')) || [];\n    const storedCopyData = JSON.parse(localStorage.getItem('isCopied')) || [];\n\n\n// ------------------------> State Declarations <----------------------------\n\n\n    // Stores/handles the entered URL form user\n    const [inputUrl, setInputUrl] = useState('');\n    // Stores/handles the fetched URL data\n    const [urlData, setUrlData] = useState(storedUrlData);\n    // Error message for if the user did not input any URL\n    const [errMsg, setErrMsg] = useState(null);\n    // Success message for valid URL\n    const [successMsg, setSuccessMsg] = useState(null);\n    // For updating whether or not the user has clicked the copy button\n    const [isCopied, setCopied] = useState(storedCopyData);\n\n\n\n// ------------------------> Copy Button Handling <----------------------------\n\n    \n\n    useEffect(() => {\n        const copyJson = JSON.stringify(isCopied);\n        localStorage.setItem('isCopied', copyJson);\n    }, [isCopied]);\n\n    // Setting the initial button text to 'Copy' after page refresh\n    useEffect(() => {\n        const initialButtonsClickedText = isCopied.map(() => 'Copy');\n        setCopied(initialButtonsClickedText);\n    }, []);\n\n    // handles the click event of the Copy button. Changes the text value of that specific item to 'Copied'\n    const handleClick = index => {\n\n        const newArr=isCopied.map((item, buttonIndex) => (buttonIndex === index ? 'Copied!' : item))\n        setCopied(newArr);\n        console.log(isCopied);\n\n    }\n\n\n\n    // ------------------------> Form Field Handling <----------------------------\n\n\n\n    // Handles capturing the url entered by the user in the input field and assiging it to inputURL\n    function handleChange(e) {\n        e.preventDefault();\n        setInputUrl(e.target.value);\n    }\n\n    // Saving data to local storage so data persists after browser refresh\n    useEffect(() => {\n        const json = JSON.stringify(urlData);\n        localStorage.setItem('urlData', json);\n    }, [urlData]);\n\n\n    // Fetches the API data using the inputted URL\n    const handleURL = () => {\n        return axios.get(api+`${inputUrl}`)\n              .then(res => {\n                setUrlData([...urlData, res.data])\n                setInputUrl('')\n                console.log(isCopied);\n                setCopied([...isCopied, 'Copy']);\n            }) .catch (err => {\n                console.error(\"Error fetching data\")\n                console.log(err)\n            })\n        }\n\n    // Handles the submition of the url and checks if it is valid, empty, or valid.\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (inputUrl === '') {\n            setSuccessMsg(false);\n            setErrMsg(true);\n            setInputUrl('');\n        } else {\n            setInputUrl('');\n            setErrMsg(false);\n            setSuccessMsg(true);\n            handleURL();\n        }\n    }\n\n\n    // ------------------------> Return Page Content <----------------------------\n\n\n    return (\n        <>\n            <div className=\"sectionContainer\">\n                <div className='formContainer'>\n                    <div className='formWrap'>\n                        <form className=\"Form\" onSubmit={handleSubmit}>\n                            <div className=\"FormGroup form-group\">\n                                <input \n                                    type=\"text\" \n                                    onChange={handleChange} \n                                    value={inputUrl} \n                                    className=\"Input\" \n                                    size='80' \n                                    placeholder=\"Shorten a link here...\"\n                                    style={errMsg ? {border:'1.5px solid hsl(0, 87%, 67%)'} : {}}\n                                />\n                                {errMsg && (\n                                <span><p className='ErrorMsg'><i>Please add a link</i></p></span>\n                                )}\n                                {successMsg && (\n                                <span><p className='SuccessMsg'><i>Success!</i></p></span>\n                                )}\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn\"\n                            >\n                                Shorten It!\n                            </button>\n                        </form>\n                    </div> \n                    <div className='DisplayList'>\n                    <div className='resultContainer'>\n                        {urlData.map((url, index) =>\n                        <div className=\"resultRow\">\n                            <div className=\"origUrlCol\">\n                                <p key={index} className='origUrl'>{ url.result.original_link }</p>\n                            </div>\n                            <div className='newUrlCol'>\n                                <p key={index} className='newUrl'>{ url.result.full_short_link }</p>\n                                <CopyToClipboard text={url.result.full_short_link}>\n                                    <button\n                                        key={index}\n                                        type=\"button\"\n                                        className='copyBtn'\n                                        className={isCopied[index] === 'Copy' ? 'copyBtn' : 'copiedBtn'}\n                                        onClick={() => handleClick(index)}\n                                    ><span>\n                                        {isCopied[index]}\n                                    </span>\n                                    </button>\n                                </CopyToClipboard>\n                            </div>\n                        </div>\n                        )}\n                    </div>  \n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}