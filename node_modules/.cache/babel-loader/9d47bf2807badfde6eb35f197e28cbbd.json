{"ast":null,"code":"var _jsxFileName = \"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/DataDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { copy } from 'copy-to-clipboard';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataDisplay = ({\n  urlData\n}) => {\n  _s();\n\n  const [isCopied, setCopied] = useState(false);\n\n  const CopyLink = () => {\n    copy(shortLink);\n    setCopied(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"origUrlCol\",\n          children: [urlData.map, /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"origUrl\",\n            children: urlData.result.original_link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newUrlCol\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"newUrl\",\n            children: urlData.result.full_short_link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), !isCopied && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"copyBtn\" //will need to change the on click to target the short link, not \"this\"\n            // onClick={}\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), isCopied && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"copyBtn\",\n            onClick: CopyLink //will need to change the on click to target the short link, not \"this\"\n            // onClick={}\n            ,\n            children: \"Copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(DataDisplay, \"Y/ut6AE40IU6qUSP9JIGKpPaYvY=\");\n\n_c = DataDisplay;\nexport default DataDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"sources":["/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/DataDisplay.js"],"names":["React","useState","copy","DataDisplay","urlData","isCopied","setCopied","CopyLink","shortLink","map","result","original_link","full_short_link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAO,aAAP;;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAEjC,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;;AAGA,QAAMM,QAAQ,GAAG,MAAM;AACnBL,IAAAA,IAAI,CAACM,SAAD,CAAJ;AACAF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAHD;;AAKA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,qBACKF,OAAO,CAACK,GADb,eAEI;AAAG,YAAA,SAAS,EAAC,SAAb;AAAA,sBAAyBL,OAAO,CAACM,MAAR,CAAeC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,QAAb;AAAA,sBAAwBP,OAAO,CAACM,MAAR,CAAeE;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,CAACP,QAAD,iBACD;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,SAAS,EAAC,SAFd,CAGI;AACA;AAJJ;AAAA,mCAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAaKA,QAAQ,iBACT;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,SAAS,EAAC,SAFd;AAGI,YAAA,OAAO,EAAEE,QAHb,CAII;AACA;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAqCH,CA/CD;;GAAMJ,W;;KAAAA,W;AAiDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { copy } from 'copy-to-clipboard';\nimport './style.css';\n\n\nconst DataDisplay = ({ urlData }) => {\n\n    const [isCopied, setCopied] = useState(false);\n\n\n    const CopyLink = () => {\n        copy(shortLink)\n        setCopied(true);\n    }\n\n    return (\n        <>\n        <div className='resultContainer'>\n            <div className=\"resultRow\">\n                <div className=\"origUrlCol\">\n                    {urlData.map}\n                    <p className='origUrl'>{ urlData.result.original_link }</p>\n                </div>\n                <div className='newUrlCol'>\n                    <p className='newUrl'>{ urlData.result.full_short_link }</p>\n                    {!isCopied && (\n                    <button\n                        type=\"submit\"\n                        className=\"copyBtn\"\n                        //will need to change the on click to target the short link, not \"this\"\n                        // onClick={}\n                    ><span>\n                        Copy\n                    </span>\n                    </button>\n                    )}\n                    {isCopied && (\n                    <button\n                        type=\"submit\"\n                        className=\"copyBtn\"\n                        onClick={CopyLink}\n                        //will need to change the on click to target the short link, not \"this\"\n                        // onClick={}\n                    >\n                        Copied!\n                    </button>\n                    )}\n                </div>\n            </div>\n        </div>   \n        </>\n    )\n}\n\nexport default DataDisplay\n"]},"metadata":{},"sourceType":"module"}