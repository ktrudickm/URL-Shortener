{"ast":null,"code":"var _jsxFileName = \"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport BgImg from \"../../images/bg-boost-desktop.svg\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const api = 'https://api.shrtco.de/v2/shorten?url=';\n  var inputExists = true;\n  var goodInput = true; // Stores/handles the entered URL form user\n\n  const [inputUrl, setInputUrl] = useState(''); // Stores/handles the fetched URL data\n\n  const [urlData, setUrlData] = useState(null); // Error message for if the user did not input any URL\n\n  const [errMsg, setErrMsg] = useState(null); // Error message for if the user entered a bad URL\n\n  const [badUrlMsg, setBadUrlMsg] = useState(null); // Success message \n\n  const [successMsg, setSuccessMsg] = useState(null); // Handles capturing the url entered by the user in the input field and assiging it to inputURL\n\n  function handleChange(e) {\n    setInputUrl(e.target.value);\n  } // Fetches the API data using the inputted URL\n\n\n  const handleURL = () => {\n    return axios.get(api + `${inputUrl}`).then(res => {\n      console.log(res.data);\n      setUrlData(res.data);\n      setInputUrl(res.data);\n    }).catch(error => {\n      console.error(\"Error fetching data\");\n      console.log(error);\n    });\n  }; // Handles the submition of the url and checks if it is valid, empty, or valid.\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n\n    if (inputUrl === '') {\n      goodInput = true;\n      inputExists = false;\n      setBadUrlMsg(false);\n      setErrMsg(true);\n    } else if (!regex.test(inputUrl)) {\n      inputExists = true;\n      goodInput = false;\n      setBadUrlMsg(true);\n      setInputUrl('');\n    } else {\n      setInputUrl('');\n      setBadUrlMsg(false);\n      setErrMsg(false);\n      setSuccessMsg(true);\n      handleURL();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bgImg\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"BG\",\n          src: BgImg,\n          type: \"image/svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: handleChange,\n            value: inputUrl,\n            className: \"Input\",\n            size: \"80\",\n            placeholder: \"Shorten a link here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), badUrlMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ErrorMsg\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Please add a valid link to shorten\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), errMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ErrorMsg\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Please add a link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), successMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"SuccessMsg\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"Success!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Shorten It!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"ijrlwyxh18cR1vYCkTF9eOVpry0=\");\n\n_c = Form;\nexport default Form; // const handleURL = async () => {\n//     setFetchedUrl(null);\n//     try {\n//         const res = await fetch(`${api}?url=${url}`);\n//         const data = await res.json();\n//         setFetchedUrl(data.result);\n//         console.log(data.result);\n//     } catch (err) {\n//         console.log(err)\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/Form.js"],"names":["React","useState","useEffect","axios","Form","api","inputExists","goodInput","inputUrl","setInputUrl","urlData","setUrlData","errMsg","setErrMsg","badUrlMsg","setBadUrlMsg","successMsg","setSuccessMsg","handleChange","e","target","value","handleURL","get","then","res","console","log","data","catch","error","handleSubmit","preventDefault","regex","test","BgImg"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './style.css';\nimport BgImg from '../../images/bg-boost-desktop.svg';\nimport axios from 'axios';\n\nconst Form = () => {\n    const api = 'https://api.shrtco.de/v2/shorten?url=';\n    var inputExists = true;\n    var goodInput = true;\n\n    // Stores/handles the entered URL form user\n    const [inputUrl, setInputUrl] = useState('');\n    // Stores/handles the fetched URL data\n    const [urlData, setUrlData] = useState(null);\n    // Error message for if the user did not input any URL\n    const [errMsg, setErrMsg] = useState(null);\n    // Error message for if the user entered a bad URL\n    const [badUrlMsg, setBadUrlMsg] = useState(null);\n    // Success message \n    const [successMsg, setSuccessMsg] = useState(null);\n\n\n    // Handles capturing the url entered by the user in the input field and assiging it to inputURL\n    function handleChange(e) {\n        setInputUrl(e.target.value);\n    }\n\n\n    // Fetches the API data using the inputted URL\n    const handleURL = () => {\n        return axios.get(api+`${inputUrl}`)\n              .then(res => {\n                  console.log(res.data);\n                  setUrlData(res.data)\n                  setInputUrl(res.data)\n            }) .catch (error => {\n                console.error(\"Error fetching data\")\n                console.log(error)\n            })\n        }\n\n    // Handles the submition of the url and checks if it is valid, empty, or valid.\n    function handleSubmit(e) {\n        e.preventDefault();\n        var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n\n        if (inputUrl === '') {\n            goodInput = true;\n            inputExists = false;\n\n            setBadUrlMsg(false)\n            setErrMsg(true);\n        } else if (!regex.test(inputUrl)) {\n            inputExists = true;\n            goodInput = false;\n            setBadUrlMsg(true);\n            setInputUrl('');\n        } else {\n            setInputUrl('');\n            setBadUrlMsg(false);\n            setErrMsg(false);\n            setSuccessMsg(true);\n            handleURL();\n        }\n    }\n\n\n\n    return (\n        <>\n            <div className='formContainer'>\n                <div className='bgImg'>\n                    <img className='BG' src={BgImg} type='image/svg'/>\n                </div>\n                <form className=\"Form\" onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <input \n                            type=\"text\" \n                            onChange={handleChange} \n                            value={inputUrl} \n                            className=\"Input\" \n                            size='80' \n                            placeholder=\"Shorten a link here...\"\n                        />\n                        {badUrlMsg && (\n                        <p className='ErrorMsg'><i>Please add a valid link to shorten</i></p>\n                        )}\n                        {errMsg && (\n                        <p className='ErrorMsg'><i>Please add a link</i></p>\n                        )}\n                        {successMsg && (\n                        <p className='SuccessMsg'><i>Success!</i></p>\n                        )}\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"btn\"\n                    >\n                        Shorten It!\n                    </button>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default Form\n\n\n    // const handleURL = async () => {\n    //     setFetchedUrl(null);\n\n    //     try {\n    //         const res = await fetch(`${api}?url=${url}`);\n    //         const data = await res.json();\n    //         setFetchedUrl(data.result);\n    //         console.log(data.result);\n    //     } catch (err) {\n    //         console.log(err)\n    //     }\n    // }\n"]},"metadata":{},"sourceType":"module"}