{"ast":null,"code":"var _jsxFileName = \"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/DataDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './style.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataDisplay = ({\n  copyStatus,\n  urlData\n}) => {\n  _s();\n\n  const [isCopied, setCopied] = useState(copyStatus);\n\n  const CopyLink = () => {\n    setCopied(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultContainer\",\n      children: urlData.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultRow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"origUrlCol\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"origUrl\",\n            children: url.result.original_link\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newUrlCol\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"newUrl\",\n            children: url.result.full_short_link\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), !isCopied && /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: url.result.full_short_link,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"copyBtn\",\n              onChange: handleChange,\n              onClick: CopyLink,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), isCopied && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"copyBtn\",\n            children: \"Copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(DataDisplay, \"Hc3CQQa/PNYr+qKygeMednsHSdo=\");\n\n_c = DataDisplay;\nexport default DataDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"sources":["/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/DataDisplay.js"],"names":["React","useState","useRef","CopyToClipboard","DataDisplay","copyStatus","urlData","isCopied","setCopied","CopyLink","map","url","index","result","original_link","full_short_link","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,yBAAhC;;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA;;AAE7C,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBP,QAAQ,CAACI,UAAD,CAAtC;;AAGA,QAAMI,QAAQ,GAAG,MAAM;AACnBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKF,OAAO,CAACI,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,kBACb;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAe,YAAA,SAAS,EAAC,SAAzB;AAAA,sBAAqCD,GAAG,CAACE,MAAJ,CAAWC;AAAhD,aAAQF,KAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAe,YAAA,SAAS,EAAC,QAAzB;AAAA,sBAAoCD,GAAG,CAACE,MAAJ,CAAWE;AAA/C,aAAQH,KAAR;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,CAACL,QAAD,iBACD,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEI,GAAG,CAACE,MAAJ,CAAWE,eAAlC;AAAA,mCACI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,SAAS,EAAC,SAFd;AAGI,cAAA,QAAQ,EAAEC,YAHd;AAII,cAAA,OAAO,EAAEP,QAJb;AAAA,qCAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAeKF,QAAQ,iBACT;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,SAAS,EAAC,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAqCH,CA9CD;;GAAMH,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './style.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\nconst DataDisplay = ({ copyStatus, urlData }) => {\n\n    const [isCopied, setCopied] = useState(copyStatus);\n\n\n    const CopyLink = () => {\n        setCopied(true);\n    }\n\n    return (\n        <>     \n        <div className='resultContainer'>\n            {urlData.map((url, index) =>\n            <div className=\"resultRow\">\n                <div className=\"origUrlCol\">\n                    <p key={index} className='origUrl'>{ url.result.original_link }</p>\n                </div>\n                <div className='newUrlCol'>\n                    <p key={index} className='newUrl'>{ url.result.full_short_link }</p>\n                    {!isCopied && (\n                    <CopyToClipboard text={url.result.full_short_link}>\n                        <button\n                            type=\"button\"\n                            className=\"copyBtn\"\n                            onChange={handleChange}\n                            onClick={CopyLink}\n                        ><span>\n                            Copy\n                        </span>\n                        </button>\n                    </CopyToClipboard>\n                    )}\n                    {isCopied && (\n                    <button\n                        type=\"button\"\n                        className=\"copyBtn\"\n                    >\n                        Copied!\n                    </button>\n                    )}\n                </div>\n            </div>\n            )}\n        </div>  \n        </>\n    )\n}\n\nexport default DataDisplay\n"]},"metadata":{},"sourceType":"module"}