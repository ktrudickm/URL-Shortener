[{"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/index.js":"1","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/App.js":"2","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/pages/index.js":"3","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/NavBar/NavBar.js":"4","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/SideBar/SideBar.js":"5","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/SideBar/SideBarElements.js":"6","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/Main/Main.js":"7","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/Form.js":"8","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/Footer/Footer.js":"9","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/BoostSection/Boost.js":"10","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/StatsSection/Stats.js":"11"},{"size":198,"mtime":1632185701467,"results":"12","hashOfConfig":"13"},{"size":162,"mtime":1632187687463,"results":"14","hashOfConfig":"13"},{"size":809,"mtime":1632248001478,"results":"15","hashOfConfig":"13"},{"size":2076,"mtime":1632330273524,"results":"16","hashOfConfig":"13"},{"size":1001,"mtime":1632500063925,"results":"17","hashOfConfig":"13"},{"size":414,"mtime":1632517458224,"results":"18","hashOfConfig":"13"},{"size":1309,"mtime":1632500029677,"results":"19","hashOfConfig":"13"},{"size":6265,"mtime":1634250751018,"results":"20","hashOfConfig":"13"},{"size":1871,"mtime":1632344629671,"results":"21","hashOfConfig":"13"},{"size":679,"mtime":1632241819580,"results":"22","hashOfConfig":"13"},{"size":2646,"mtime":1632410472707,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vgpt31",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/index.js",[],["53","54"],"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/App.js",[],"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/pages/index.js",[],"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/NavBar/NavBar.js",["55","56","57","58","59","60"],"import React from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport './style.css';\n\nconst Navbar = ({ toggle }) => {\n    return (\n        <>\n            <nav className=\"Navbar\">\n                <div className=\"NavContainer\">\n                    <h1 className=\"NavHeader\">Shortly</h1>\n                    <div className=\"MobileIcon\" onClick={toggle}>\n                        <FaBars />\n                    </div>\n                    <div className=\"NavOptions\">\n                        <a href=\"#\" className=\"navLink\">Features</a>\n                        <a href=\"#\" className=\"navLink\">Pricing</a>\n                        <a href=\"#\" className=\"navLink\">Resources</a>\n                    </div>\n                    <div className=\"Sign\">\n                        <div className=\"NavItem\">\n                            <a href=\"#\" className=\"navLink\">Login</a>\n                        </div>\n                        <div className=\"NavBtn\">\n                            <a href=\"#\" className=\"BtnLink\">Signup</a>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n\n        </>\n    )\n}\n\nexport default Navbar\n\n\n{/* <>\n<nav className=\"Navbar\">\n    <div className=\"NavContainer\">\n        <h1 className=\"NavHeader\">Shortly</h1>\n        <div className=\"MobileIcon\" onClick={toggle}>\n            <FaBars />\n        </div>\n        <div className=\"NavOptions\">\n            <div className=\"NavItem\">\n                <a href=\"#\" className=\"navLink\">Features</a>\n            </div>\n            <div className=\"NavItem\">\n                <a href=\"#\" className=\"navLink\">Pricing</a>\n            </div>\n            <div className=\"NavItem\">\n                <a href=\"#\" className=\"navLink\">Resources</a>\n            </div>\n        </div>\n        <div className=\"Sign\">\n            <div className=\"NavItem\">\n                <a href=\"#\" className=\"navLink\">Login</a>\n            </div>\n            <div className=\"NavBtn\">\n                <a href=\"#\" className=\"BtnLink\">Signup</a>\n            </div>\n        </div>\n    </div>\n</nav>\n\n</> */}","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/SideBar/SideBar.js",["61","62","63","64","65"],"import React from 'react';\nimport './style.css';\nimport SbContainer from './SideBarElements'\n\nexport const SideBar = ({isOpen, toggle}) => {\n    return (\n        <>\n            <SbContainer isOpen={isOpen} onClick={toggle}>\n                <div className='SbWrap'>\n                    <ul className='SbOptions'>\n                        <a className='SbLink' href='#' onClick={toggle}>Features</a>\n                        <a className='SbLink' href='#' onClick={toggle}>Pricing</a>\n                        <a className='SbLink' href='#' onClick={toggle}>Resources</a>\n                    </ul>\n                    <ul className='SignupSbOptions'>\n                        <a className='SbLink' href='#' onClick={toggle}>Login</a>\n                        <div className='SbBtnWrap'>\n                            <a className='SbBtn' href='#'>Sign Up</a>\n                        </div>\n                    </ul>\n                </div>\n            </SbContainer>\n        </>\n    )\n}\n\nexport default SideBar\n","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/SideBar/SideBarElements.js",[],"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/Main/Main.js",[],"/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/FormField/Form.js",["66","67","68"],"import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nconst Form = () => {\n    const api = 'https://api.shrtco.de/v2/shorten?url=';\n    const storedUrlData = JSON.parse(localStorage.getItem('urlData')) || [];\n    const storedCopyData = JSON.parse(localStorage.getItem('isCopied')) || [];\n\n\n// ------------------------> State Declarations <----------------------------\n\n\n    // Stores/handles the entered URL form user\n    const [inputUrl, setInputUrl] = useState('');\n    // Stores/handles the fetched URL data\n    const [urlData, setUrlData] = useState(storedUrlData);\n    // Error message for if the user did not input any URL\n    const [errMsg, setErrMsg] = useState(null);\n    // Success message for valid URL\n    const [successMsg, setSuccessMsg] = useState(null);\n    // For updating whether or not the user has clicked the copy button\n    const [isCopied, setCopied] = useState(storedCopyData);\n\n\n\n// ------------------------> Copy Button Handling <----------------------------\n\n    \n\n    useEffect(() => {\n        const copyJson = JSON.stringify(isCopied);\n        localStorage.setItem('isCopied', copyJson);\n    }, [isCopied]);\n\n    // Setting the initial button text to 'Copy' after page refresh\n    useEffect(() => {\n        const initialButtonsClickedText = isCopied.map(() => 'Copy');\n        setCopied(initialButtonsClickedText);\n    }, []);\n\n    // handles the click event of the Copy button. Changes the text value of that specific item to 'Copied'\n    const handleClick = index => {\n\n        const newArr=isCopied.map((item, buttonIndex) => (buttonIndex === index ? 'Copied!' : item))\n        setCopied(newArr);\n        console.log(isCopied);\n\n    }\n\n\n\n    // ------------------------> Form Field Handling <----------------------------\n\n\n\n    // Handles capturing the url entered by the user in the input field and assiging it to inputURL\n    function handleChange(e) {\n        e.preventDefault();\n        setInputUrl(e.target.value);\n    }\n\n    // Saving data to local storage so data persists after browser refresh\n    useEffect(() => {\n        const json = JSON.stringify(urlData);\n        localStorage.setItem('urlData', json);\n    }, [urlData]);\n\n\n    // Fetches the API data using the inputted URL\n    const handleURL = () => {\n        return axios.get(api+`${inputUrl}`)\n              .then(res => {\n                setUrlData([...urlData, res.data])\n                setInputUrl('')\n                console.log(isCopied);\n                setCopied([...isCopied, 'Copy']);\n            }) .catch (err => {\n                console.error(\"Error fetching data\")\n                console.log(err)\n            })\n        }\n\n    // Handles the submition of the url and checks if it is valid, empty, or valid.\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        if (inputUrl === '') {\n            setSuccessMsg(false);\n            setErrMsg(true);\n            setInputUrl('');\n        } else {\n            setInputUrl('');\n            setErrMsg(false);\n            setSuccessMsg(true);\n            handleURL();\n        }\n    }\n\n\n    // ------------------------> Return Page Content <----------------------------\n\n\n    return (\n        <>\n            <div className=\"sectionContainer\">\n                <div className='formContainer'>\n                    <div className='formWrap'>\n                        <form className=\"Form\" onSubmit={handleSubmit}>\n                            <div className=\"FormGroup form-group\">\n                                <input \n                                    type=\"text\" \n                                    onChange={handleChange} \n                                    value={inputUrl} \n                                    className=\"Input\" \n                                    size='80' \n                                    placeholder=\"Shorten a link here...\"\n                                    style={errMsg ? {border:'1.5px solid hsl(0, 87%, 67%)'} : {}}\n                                />\n                                {errMsg && (\n                                <span><p className='ErrorMsg'><i>Please add a link</i></p></span>\n                                )}\n                                {successMsg && (\n                                <span><p className='SuccessMsg'><i>Success!</i></p></span>\n                                )}\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn\"\n                            >\n                                Shorten It!\n                            </button>\n                        </form>\n                    </div> \n                    <div className='DisplayList'>\n                    <div className='resultContainer'>\n                        {urlData.map((url, index) =>\n                        <div className=\"resultRow\">\n                            <div className=\"origUrlCol\">\n                                <p key={index} className='origUrl'>{ url.result.original_link }</p>\n                            </div>\n                            <div className='newUrlCol'>\n                                <p key={index} className='newUrl'>{ url.result.full_short_link }</p>\n                                <CopyToClipboard text={url.result.full_short_link}>\n                                    <button\n                                        key={index}\n                                        type=\"button\"\n                                        className='copyBtn'\n                                        className={isCopied[index] === 'Copy' ? 'copyBtn' : 'copiedBtn'}\n                                        onClick={() => handleClick(index)}\n                                    ><span>\n                                        {isCopied[index]}\n                                    </span>\n                                    </button>\n                                </CopyToClipboard>\n                            </div>\n                        </div>\n                        )}\n                    </div>  \n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Form\n","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/Footer/Footer.js",["69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React from \"react\";\nimport './style.css';\nimport { FaFacebook, FaTwitter, FaPinterest, FaInstagram } from 'react-icons/fa';\n  \nconst Footer = () => {\n  return (\n    <div className='Footer'>\n      <div className=\"FooterContainer\">\n        <div className='RowSection'>\n          <h1 className='MainHeading'>Shortly\n          </h1>\n          <div className='columns'>\n            <p className=\"FooterItem\">Features</p>\n            <a className='ItemLink' href=\"#\">Link Shortening</a>\n            <a className='ItemLink' href=\"#\">Branded Links</a>\n            <a className='ItemLink' href=\"#\">Analytics</a>\n          </div>\n          <div className='columns'>\n            <p className=\"FooterItem\">Resources</p>\n            <a className='ItemLink' href=\"#\">Blog</a>\n            <a className='ItemLink' href=\"#\">Developers</a>\n            <a className='ItemLink' href=\"#\">Support</a>\n          </div>\n          <div className='columns'>\n            <p className=\"FooterItem\">Company</p>\n            <a className='ItemLink' href=\"#\">About</a>\n            <a className='ItemLink' href=\"#\">Our Team</a>\n            <a className='ItemLink' href=\"#\">Careers</a>\n            <a className='ItemLink' href=\"#\">Contact</a>\n          </div>\n          <div className='columns'>\n              <div className='socialColumns'>\n                <a className='socialItemLink' href=\"#\">\n                    <FaFacebook />\n                </a>\n                <a className='socialItemLink' href=\"#\">\n                    <FaTwitter />\n                </a>\n                <a className='socialItemLink' href=\"#\">\n                    <FaPinterest />\n                </a>\n                <a className='socialItemLink' href=\"#\">\n                    <FaInstagram />\n                </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default Footer;","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/BoostSection/Boost.js",["83","84"],"import React from 'react'\nimport boostBg from '../../images/bg-boost-desktop.svg';\nimport './style.css';\n\nconst BoostSection = () => {\n    return (\n        <>\n            <div className='Container'>\n                <div className='BgImage'>\n                    <img className='BG' src={boostBg} type='image/svg'/>\n                </div>\n                <div className='BoostContent'>\n                    <h1 className='Heading'>Boost your links today</h1>\n                    <div className='BtnWrap'>\n                        <a className='Btn'>Get Started</a>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default BoostSection\n","/Users/kendalltrudick/Documents/The-Landing/test-bzgbep/src/components/StatsSection/Stats.js",["85","86","87"],"import React from 'react'\nimport img1 from '../../images/icon-brand-recognition.svg'\nimport img2 from '../../images/icon-detailed-records.svg'\nimport img3 from '../../images/icon-fully-customizable.svg'\nimport './style.css'\n\n\nconst StatsSection = () => {\n    return (\n        <>\n            <div className='StatsContainer'>\n                <div className='HeadingContainer'>\n                    <h1 className='MainHeader'>Advanced Statistics</h1>\n                    <p className='StatsSubtitle'>Track how your links are performing accross the web with our advanced statistics dashboard.</p>\n                </div>\n                <hr></hr>\n                <div className='centerLine'>\n                <div className='cardWrapper'>\n                    <div className='Card1 Card'>\n                        <div className='ImgContainer'>\n                            <img className='CardImg' src={img1}/>\n                        </div>\n                        \n                        <div className='CardContainer'>\n                            <h2 className='CardHeading'>Brand Recognition</h2>\n                            <p className='CardContent'>Boost your brand recognition with each click. Generic links dont mean a thing. Branded links help instill confidence in your content.</p>\n                        </div>\n                    </div>\n                    <div className='Card2 Card'>\n                        <div className='ImgContainer'>\n                            <img className='CardImg' src={img2}/>\n                        </div>\n                        <div className='CardContainer'>\n                            <h2 className='CardHeading'>Detailed Records</h2>\n                            <p className='CardContent'>Gain insights into who is clicking your links. Knowing when and where people engage with your content helps inform better decisions.</p>\n                        </div>\n                    </div>\n                    \n                    <div className='Card3 Card'>\n                        <div className='ImgContainer'>\n                            <img className='CardImg' src={img3}/>\n                        </div>\n                        <div className='CardContainer'>\n                            <h2 className='CardHeading'>Fully Customizable</h2>\n                            <p className='CardContent'>Improve brand awareness and content discoverability through customizable links, supercharging audience engagement.</p>\n                        </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n            \n        </>\n    )\n}\n\nexport default StatsSection\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":25,"nodeType":"94","endLine":15,"endColumn":57},{"ruleId":"92","severity":1,"message":"93","line":16,"column":25,"nodeType":"94","endLine":16,"endColumn":57},{"ruleId":"92","severity":1,"message":"93","line":17,"column":25,"nodeType":"94","endLine":17,"endColumn":57},{"ruleId":"92","severity":1,"message":"93","line":21,"column":29,"nodeType":"94","endLine":21,"endColumn":61},{"ruleId":"92","severity":1,"message":"93","line":24,"column":29,"nodeType":"94","endLine":24,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":37,"column":1,"nodeType":"97","messageId":"98","endLine":66,"endColumn":8},{"ruleId":"92","severity":1,"message":"93","line":11,"column":25,"nodeType":"94","endLine":11,"endColumn":73},{"ruleId":"92","severity":1,"message":"93","line":12,"column":25,"nodeType":"94","endLine":12,"endColumn":73},{"ruleId":"92","severity":1,"message":"93","line":13,"column":25,"nodeType":"94","endLine":13,"endColumn":73},{"ruleId":"92","severity":1,"message":"93","line":16,"column":25,"nodeType":"94","endLine":16,"endColumn":73},{"ruleId":"92","severity":1,"message":"93","line":18,"column":29,"nodeType":"94","endLine":18,"endColumn":59},{"ruleId":"99","severity":1,"message":"100","line":41,"column":8,"nodeType":"101","endLine":41,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":73,"column":16,"nodeType":"105","messageId":"106","endLine":79,"endColumn":22,"fix":"107"},{"ruleId":"108","severity":1,"message":"109","line":150,"column":41,"nodeType":"110","messageId":"111","endLine":150,"endColumn":105},{"ruleId":"92","severity":1,"message":"93","line":14,"column":13,"nodeType":"94","endLine":14,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":15,"column":13,"nodeType":"94","endLine":15,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":16,"column":13,"nodeType":"94","endLine":16,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":20,"column":13,"nodeType":"94","endLine":20,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":21,"column":13,"nodeType":"94","endLine":21,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":22,"column":13,"nodeType":"94","endLine":22,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":26,"column":13,"nodeType":"94","endLine":26,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":27,"column":13,"nodeType":"94","endLine":27,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":28,"column":13,"nodeType":"94","endLine":28,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":29,"column":13,"nodeType":"94","endLine":29,"endColumn":46},{"ruleId":"92","severity":1,"message":"93","line":33,"column":17,"nodeType":"94","endLine":33,"endColumn":56},{"ruleId":"92","severity":1,"message":"93","line":36,"column":17,"nodeType":"94","endLine":36,"endColumn":56},{"ruleId":"92","severity":1,"message":"93","line":39,"column":17,"nodeType":"94","endLine":39,"endColumn":56},{"ruleId":"92","severity":1,"message":"93","line":42,"column":17,"nodeType":"94","endLine":42,"endColumn":56},{"ruleId":"112","severity":1,"message":"113","line":10,"column":21,"nodeType":"94","endLine":10,"endColumn":73},{"ruleId":"92","severity":1,"message":"114","line":15,"column":25,"nodeType":"94","endLine":15,"endColumn":44},{"ruleId":"112","severity":1,"message":"113","line":21,"column":29,"nodeType":"94","endLine":21,"endColumn":66},{"ruleId":"112","severity":1,"message":"113","line":31,"column":29,"nodeType":"94","endLine":31,"endColumn":66},{"ruleId":"112","severity":1,"message":"113","line":41,"column":29,"nodeType":"94","endLine":41,"endColumn":66},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isCopied'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"118","text":"119"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},[2617,2619],".","Update the dependencies array to be: [isCopied]",{"range":"122","text":"123"},[1458,1460],"[isCopied]"]